import io
import os
import streamlit as st
from PIL import Image
from model import get_caption_model, generate_caption
from pretrained_model import predict_step
from GIT_model import predict_GIT_step

def get_model():
    return get_caption_model()

caption_model = get_model()

def predict():
    captions = []
    pred_caption = generate_caption('tmp.jpg', caption_model)

    st.markdown('#### Predicted Captions:')
    st.markdown('##### Captions generated by custom model: ')
    captions.append(pred_caption)

    for _ in range(4):
        pred_caption = generate_caption('tmp.jpg', caption_model, add_noise=True)
        if pred_caption not in captions:
            captions.append(pred_caption)
    
    for c in captions:
        st.write(c)

def pretrained_predict():
    pred_caption = predict_step('tmp.jpg')

    st.markdown('##### Captions generated by ViT-GPT2:')
    st.write(pred_caption[0])

def GIT_model():
    pred_caption=predict_GIT_step('tmp.jpg')

    st.markdown('##### Captions generated by GIT:')
    st.write(pred_caption)

st.title('Image Captioner')
st.markdown('#### Built by NevinTroy')

img_upload = st.file_uploader(label='Upload Image', type=['jpg', 'png', 'jpeg'])

if img_upload != None:
    img = img_upload.read()
    img = Image.open(io.BytesIO(img))
    img = img.convert('RGB')
    img.save('tmp.jpg')
    st.image(img)
    predict()
    pretrained_predict()
    GIT_model()
    os.remove('tmp.jpg')